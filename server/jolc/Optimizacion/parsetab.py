
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftIGUALDADDIFERENTEMENORMAYORMAYORIGUALMENORIGUALleftMASMENOSleftPORDIVrightUMENOSCADENA COMA COMI CORDER CORIZQ DECIMAL DIFERENTE DIV DOSPTS ENTERO ID IGUAL IGUALDAD LLAVDER LLAVIZQ MAS MAYOR MAYORIGUAL MENOR MENORIGUAL MENOS PARDER PARIZQ POR PORCENTAJE PTCOMA PUNTO RFLOAT RFMT RFUNC RGOTO RH RHEAP RIF RIMPORT RINT RMAIN RMATH RMOD RP RPACK RPRINT RRETURN RSTACK RVARinit           : encabezadoencabezado           : RPACK RMAIN PTCOMA sigEnc funcionessigEnc               : RIMPORT PARIZQ conjLibsconjLibs             : CADENA PARDER variablesconjLibs             : CADENA PTCOMA CADENA PARDER variablesvariables            : RVAR RSTACK CORIZQ ENTERO CORDER RFLOAT PTCOMA variables1variables1               : RVAR RHEAP CORIZQ ENTERO CORDER RFLOAT PTCOMA variables2variables2               : RVAR RP COMA RH RFLOAT PTCOMA variables3variables3               : RVAR listaTMP RFLOAT PTCOMAlistaTMP               : listaTMP COMA IDlistaTMP               : IDfunciones      :  funciones funcionfunciones      : funcionfuncion      : RFUNC ID PARIZQ PARDER LLAVIZQ instrucciones LLAVDERfuncion      : RFUNC RMAIN PARIZQ PARDER LLAVIZQ instrucciones LLAVDERinstrucciones      :  instrucciones instruccioninstrucciones      : instruccion\n    instruccion         : asignacion PTCOMA\n                        | imprimir PTCOMA\n                        | salto\n                        | if_inst\n                        | llamada_func PTCOMA\n                        | etiqueta_instr\n                        | return_instr PTCOMA\n    \n    llamada_func            : ID PARIZQ PARDER\n    \n    return_instr            : RRETURN\n    \n    etiqueta_instr            : ID DOSPTS\n    \n    if_inst            : RIF expresion LLAVIZQ salto LLAVDER\n    \n    salto            : RGOTO ID PTCOMA\n    \n    imprimir            : RFMT PUNTO RPRINT PARIZQ CADENA COMA expresion PARDER\n    \n    asignacion          : expresion IGUAL expresion MAS expresion\n                        | expresion IGUAL expresion MENOS expresion\n                        | expresion IGUAL expresion POR expresion\n                        | expresion IGUAL expresion DIV expresion\n    \n    asignacion          : expresion IGUAL expresion\n    \n    asignacion          : expresion IGUAL RSTACK CORIZQ RINT PARIZQ expresion PARDER CORDER\n                        | expresion IGUAL RHEAP CORIZQ RINT PARIZQ expresion PARDER CORDER\n    \n    asignacion          : RSTACK CORIZQ RINT PARIZQ expresion PARDER CORDER IGUAL expresion\n                        | RHEAP CORIZQ RINT PARIZQ expresion PARDER CORDER IGUAL expresion\n    \n    asignacion          : expresion IGUAL RMATH PUNTO RMOD PARIZQ expresion COMA expresion PARDER\n    \n    expresion       : DECIMAL\n                    | ENTERO\n                    | RP\n                    | RH\n                    | ID\n    \n    expresion           : expresion MAYOR expresion\n                        | expresion MAYORIGUAL expresion\n                        | expresion MENOR expresion\n                        | expresion MENORIGUAL expresion\n                        | expresion IGUALDAD expresion\n                        | expresion DIFERENTE expresion\n    \n    expresion       : RINT PARIZQ expresion PARDER\n    expresion          :   MENOS expresion %prec UMENOS'
    
_lr_action_items = {'RPACK':([0,],[3,]),'$end':([1,2,8,9,12,58,79,],[0,-1,-2,-13,-12,-14,-15,]),'RMAIN':([3,10,],[4,14,]),'PTCOMA':([4,16,33,34,37,39,48,49,50,51,52,71,72,77,81,82,86,87,88,89,90,91,107,111,112,113,114,115,144,146,147,149,150,152,154,161,167,],[5,20,60,61,62,63,-26,-41,-42,-43,-44,-53,-45,96,-25,-35,-46,-47,-48,-49,-50,-51,-52,123,-31,-32,-33,-34,-30,-36,-37,-38,-39,-40,155,162,169,]),'RIMPORT':([5,],[7,]),'RFUNC':([6,8,9,12,15,23,55,58,79,131,157,164,169,],[10,10,-13,-12,-3,-4,-5,-14,-15,-6,-7,-8,-9,]),'PARIZQ':([7,13,14,30,43,92,94,95,116,117,118,],[11,17,18,56,74,106,108,109,124,125,126,]),'ID':([10,26,27,31,32,35,36,38,41,46,47,53,57,59,60,61,62,63,64,65,66,67,68,69,70,74,96,99,100,101,102,106,108,122,124,125,126,129,141,142,143,163,168,],[13,30,30,30,-17,-20,-21,-23,72,77,72,30,-27,-16,-18,-19,-22,-24,72,72,72,72,72,72,72,72,-29,72,72,72,72,72,72,-28,72,72,72,72,72,72,72,166,170,]),'CADENA':([11,20,109,],[16,25,121,]),'PARDER':([16,17,18,25,49,50,51,52,56,71,72,86,87,88,89,90,91,93,107,119,120,132,133,137,148,],[19,21,22,29,-41,-42,-43,-44,81,-53,-45,-46,-47,-48,-49,-50,-51,107,-52,127,128,139,140,144,152,]),'RVAR':([19,29,123,155,162,],[24,24,130,156,163,]),'LLAVIZQ':([21,22,49,50,51,52,71,72,78,86,87,88,89,90,91,107,],[26,27,-41,-42,-43,-44,-53,-45,97,-46,-47,-48,-49,-50,-51,-52,]),'RSTACK':([24,26,27,31,32,35,36,38,53,57,59,60,61,62,63,64,96,122,],[28,42,42,42,-17,-20,-21,-23,42,-27,-16,-18,-19,-22,-24,83,-29,-28,]),'RHEAP':([26,27,31,32,35,36,38,53,57,59,60,61,62,63,64,96,122,130,],[44,44,44,-17,-20,-21,-23,44,-27,-16,-18,-19,-22,-24,84,-29,-28,138,]),'RFMT':([26,27,31,32,35,36,38,53,57,59,60,61,62,63,96,122,],[45,45,45,-17,-20,-21,-23,45,-27,-16,-18,-19,-22,-24,-29,-28,]),'RGOTO':([26,27,31,32,35,36,38,53,57,59,60,61,62,63,96,97,122,],[46,46,46,-17,-20,-21,-23,46,-27,-16,-18,-19,-22,-24,-29,46,-28,]),'RIF':([26,27,31,32,35,36,38,53,57,59,60,61,62,63,96,122,],[47,47,47,-17,-20,-21,-23,47,-27,-16,-18,-19,-22,-24,-29,-28,]),'RRETURN':([26,27,31,32,35,36,38,53,57,59,60,61,62,63,96,122,],[48,48,48,-17,-20,-21,-23,48,-27,-16,-18,-19,-22,-24,-29,-28,]),'DECIMAL':([26,27,31,32,35,36,38,41,47,53,57,59,60,61,62,63,64,65,66,67,68,69,70,74,96,99,100,101,102,106,108,122,124,125,126,129,141,142,143,],[49,49,49,-17,-20,-21,-23,49,49,49,-27,-16,-18,-19,-22,-24,49,49,49,49,49,49,49,49,-29,49,49,49,49,49,49,-28,49,49,49,49,49,49,49,]),'ENTERO':([26,27,31,32,35,36,38,41,47,53,54,57,59,60,61,62,63,64,65,66,67,68,69,70,74,96,99,100,101,102,106,108,122,124,125,126,129,141,142,143,145,],[50,50,50,-17,-20,-21,-23,50,50,50,80,-27,-16,-18,-19,-22,-24,50,50,50,50,50,50,50,50,-29,50,50,50,50,50,50,-28,50,50,50,50,50,50,50,151,]),'RP':([26,27,31,32,35,36,38,41,47,53,57,59,60,61,62,63,64,65,66,67,68,69,70,74,96,99,100,101,102,106,108,122,124,125,126,129,141,142,143,156,],[51,51,51,-17,-20,-21,-23,51,51,51,-27,-16,-18,-19,-22,-24,51,51,51,51,51,51,51,51,-29,51,51,51,51,51,51,-28,51,51,51,51,51,51,51,158,]),'RH':([26,27,31,32,35,36,38,41,47,53,57,59,60,61,62,63,64,65,66,67,68,69,70,74,96,99,100,101,102,106,108,122,124,125,126,129,141,142,143,159,],[52,52,52,-17,-20,-21,-23,52,52,52,-27,-16,-18,-19,-22,-24,52,52,52,52,52,52,52,52,-29,52,52,52,52,52,52,-28,52,52,52,52,52,52,52,160,]),'RINT':([26,27,31,32,35,36,38,41,47,53,57,59,60,61,62,63,64,65,66,67,68,69,70,73,74,75,96,99,100,101,102,103,104,106,108,122,124,125,126,129,141,142,143,],[43,43,43,-17,-20,-21,-23,43,43,43,-27,-16,-18,-19,-22,-24,43,43,43,43,43,43,43,92,43,94,-29,43,43,43,43,116,117,43,43,-28,43,43,43,43,43,43,43,]),'MENOS':([26,27,31,32,35,36,38,41,47,49,50,51,52,53,57,59,60,61,62,63,64,65,66,67,68,69,70,71,72,74,82,86,87,88,89,90,91,96,99,100,101,102,106,107,108,122,124,125,126,129,141,142,143,],[41,41,41,-17,-20,-21,-23,41,41,-41,-42,-43,-44,41,-27,-16,-18,-19,-22,-24,41,41,41,41,41,41,41,-53,-45,41,100,-46,-47,-48,-49,-50,-51,-29,41,41,41,41,41,-52,41,-28,41,41,41,41,41,41,41,]),'CORIZQ':([28,42,44,83,84,138,],[54,73,75,103,104,145,]),'DOSPTS':([30,],[57,]),'IGUAL':([30,40,49,50,51,52,71,72,86,87,88,89,90,91,107,135,136,],[-45,64,-41,-42,-43,-44,-53,-45,-46,-47,-48,-49,-50,-51,-52,142,143,]),'MAYOR':([30,40,49,50,51,52,71,72,78,82,86,87,88,89,90,91,93,107,112,113,114,115,119,120,132,133,134,137,148,149,150,],[-45,65,-41,-42,-43,-44,-53,-45,65,65,-46,-47,-48,-49,-50,-51,65,-52,65,65,65,65,65,65,65,65,65,65,65,65,65,]),'MAYORIGUAL':([30,40,49,50,51,52,71,72,78,82,86,87,88,89,90,91,93,107,112,113,114,115,119,120,132,133,134,137,148,149,150,],[-45,66,-41,-42,-43,-44,-53,-45,66,66,-46,-47,-48,-49,-50,-51,66,-52,66,66,66,66,66,66,66,66,66,66,66,66,66,]),'MENOR':([30,40,49,50,51,52,71,72,78,82,86,87,88,89,90,91,93,107,112,113,114,115,119,120,132,133,134,137,148,149,150,],[-45,67,-41,-42,-43,-44,-53,-45,67,67,-46,-47,-48,-49,-50,-51,67,-52,67,67,67,67,67,67,67,67,67,67,67,67,67,]),'MENORIGUAL':([30,40,49,50,51,52,71,72,78,82,86,87,88,89,90,91,93,107,112,113,114,115,119,120,132,133,134,137,148,149,150,],[-45,68,-41,-42,-43,-44,-53,-45,68,68,-46,-47,-48,-49,-50,-51,68,-52,68,68,68,68,68,68,68,68,68,68,68,68,68,]),'IGUALDAD':([30,40,49,50,51,52,71,72,78,82,86,87,88,89,90,91,93,107,112,113,114,115,119,120,132,133,134,137,148,149,150,],[-45,69,-41,-42,-43,-44,-53,-45,69,69,-46,-47,-48,-49,-50,-51,69,-52,69,69,69,69,69,69,69,69,69,69,69,69,69,]),'DIFERENTE':([30,40,49,50,51,52,71,72,78,82,86,87,88,89,90,91,93,107,112,113,114,115,119,120,132,133,134,137,148,149,150,],[-45,70,-41,-42,-43,-44,-53,-45,70,70,-46,-47,-48,-49,-50,-51,70,-52,70,70,70,70,70,70,70,70,70,70,70,70,70,]),'LLAVDER':([31,32,35,36,38,53,57,59,60,61,62,63,96,110,122,],[58,-17,-20,-21,-23,79,-27,-16,-18,-19,-22,-24,-29,122,-28,]),'PUNTO':([45,85,],[76,105,]),'MAS':([49,50,51,52,71,72,82,86,87,88,89,90,91,107,],[-41,-42,-43,-44,-53,-45,99,-46,-47,-48,-49,-50,-51,-52,]),'POR':([49,50,51,52,71,72,82,86,87,88,89,90,91,107,],[-41,-42,-43,-44,-53,-45,101,-46,-47,-48,-49,-50,-51,-52,]),'DIV':([49,50,51,52,71,72,82,86,87,88,89,90,91,107,],[-41,-42,-43,-44,-53,-45,102,-46,-47,-48,-49,-50,-51,-52,]),'COMA':([49,50,51,52,71,72,86,87,88,89,90,91,107,121,134,158,165,166,170,],[-41,-42,-43,-44,-53,-45,-46,-47,-48,-49,-50,-51,-52,129,141,159,168,-11,-10,]),'RMATH':([64,],[85,]),'RPRINT':([76,],[95,]),'CORDER':([80,127,128,139,140,151,],[98,135,136,146,147,153,]),'RFLOAT':([98,153,160,165,166,170,],[111,154,161,167,-11,-10,]),'RMOD':([105,],[118,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'init':([0,],[1,]),'encabezado':([0,],[2,]),'sigEnc':([5,],[6,]),'funciones':([6,],[8,]),'funcion':([6,8,],[9,12,]),'conjLibs':([11,],[15,]),'variables':([19,29,],[23,55,]),'instrucciones':([26,27,],[31,53,]),'instruccion':([26,27,31,53,],[32,32,59,59,]),'asignacion':([26,27,31,53,],[33,33,33,33,]),'imprimir':([26,27,31,53,],[34,34,34,34,]),'salto':([26,27,31,53,97,],[35,35,35,35,110,]),'if_inst':([26,27,31,53,],[36,36,36,36,]),'llamada_func':([26,27,31,53,],[37,37,37,37,]),'etiqueta_instr':([26,27,31,53,],[38,38,38,38,]),'return_instr':([26,27,31,53,],[39,39,39,39,]),'expresion':([26,27,31,41,47,53,64,65,66,67,68,69,70,74,99,100,101,102,106,108,124,125,126,129,141,142,143,],[40,40,40,71,78,40,82,86,87,88,89,90,91,93,112,113,114,115,119,120,132,133,134,137,148,149,150,]),'variables1':([123,],[131,]),'variables2':([155,],[157,]),'variables3':([162,],[164,]),'listaTMP':([163,],[165,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> init","S'",1,None,None,None),
  ('init -> encabezado','init',1,'p_init','gramaticaOPT.py',155),
  ('encabezado -> RPACK RMAIN PTCOMA sigEnc funciones','encabezado',5,'p_encabezado','gramaticaOPT.py',160),
  ('sigEnc -> RIMPORT PARIZQ conjLibs','sigEnc',3,'p_sig_encabezado','gramaticaOPT.py',164),
  ('conjLibs -> CADENA PARDER variables','conjLibs',3,'p_conjLibs','gramaticaOPT.py',168),
  ('conjLibs -> CADENA PTCOMA CADENA PARDER variables','conjLibs',5,'p_conjLibs2','gramaticaOPT.py',172),
  ('variables -> RVAR RSTACK CORIZQ ENTERO CORDER RFLOAT PTCOMA variables1','variables',8,'p_varExp','gramaticaOPT.py',176),
  ('variables1 -> RVAR RHEAP CORIZQ ENTERO CORDER RFLOAT PTCOMA variables2','variables1',8,'p_varExp1','gramaticaOPT.py',180),
  ('variables2 -> RVAR RP COMA RH RFLOAT PTCOMA variables3','variables2',7,'p_varExp2','gramaticaOPT.py',184),
  ('variables3 -> RVAR listaTMP RFLOAT PTCOMA','variables3',4,'p_varExp3','gramaticaOPT.py',188),
  ('listaTMP -> listaTMP COMA ID','listaTMP',3,'p_temporales','gramaticaOPT.py',192),
  ('listaTMP -> ID','listaTMP',1,'p_temporales2','gramaticaOPT.py',196),
  ('funciones -> funciones funcion','funciones',2,'p_funciones_lista','gramaticaOPT.py',201),
  ('funciones -> funcion','funciones',1,'p_funciones_funcion','gramaticaOPT.py',207),
  ('funcion -> RFUNC ID PARIZQ PARDER LLAVIZQ instrucciones LLAVDER','funcion',7,'p_funcion','gramaticaOPT.py',215),
  ('funcion -> RFUNC RMAIN PARIZQ PARDER LLAVIZQ instrucciones LLAVDER','funcion',7,'p_funcion1','gramaticaOPT.py',220),
  ('instrucciones -> instrucciones instruccion','instrucciones',2,'p_instrucciones_lista','gramaticaOPT.py',226),
  ('instrucciones -> instruccion','instrucciones',1,'p_instrucciones_instruccion','gramaticaOPT.py',232),
  ('instruccion -> asignacion PTCOMA','instruccion',2,'p_instruccion','gramaticaOPT.py',242),
  ('instruccion -> imprimir PTCOMA','instruccion',2,'p_instruccion','gramaticaOPT.py',243),
  ('instruccion -> salto','instruccion',1,'p_instruccion','gramaticaOPT.py',244),
  ('instruccion -> if_inst','instruccion',1,'p_instruccion','gramaticaOPT.py',245),
  ('instruccion -> llamada_func PTCOMA','instruccion',2,'p_instruccion','gramaticaOPT.py',246),
  ('instruccion -> etiqueta_instr','instruccion',1,'p_instruccion','gramaticaOPT.py',247),
  ('instruccion -> return_instr PTCOMA','instruccion',2,'p_instruccion','gramaticaOPT.py',248),
  ('llamada_func -> ID PARIZQ PARDER','llamada_func',3,'p_llamada_func','gramaticaOPT.py',255),
  ('return_instr -> RRETURN','return_instr',1,'p_return','gramaticaOPT.py',262),
  ('etiqueta_instr -> ID DOSPTS','etiqueta_instr',2,'p_etiqueta','gramaticaOPT.py',269),
  ('if_inst -> RIF expresion LLAVIZQ salto LLAVDER','if_inst',5,'p_if','gramaticaOPT.py',276),
  ('salto -> RGOTO ID PTCOMA','salto',3,'p_salto','gramaticaOPT.py',283),
  ('imprimir -> RFMT PUNTO RPRINT PARIZQ CADENA COMA expresion PARDER','imprimir',8,'p_imprimir','gramaticaOPT.py',290),
  ('asignacion -> expresion IGUAL expresion MAS expresion','asignacion',5,'p_asignacion_exp','gramaticaOPT.py',297),
  ('asignacion -> expresion IGUAL expresion MENOS expresion','asignacion',5,'p_asignacion_exp','gramaticaOPT.py',298),
  ('asignacion -> expresion IGUAL expresion POR expresion','asignacion',5,'p_asignacion_exp','gramaticaOPT.py',299),
  ('asignacion -> expresion IGUAL expresion DIV expresion','asignacion',5,'p_asignacion_exp','gramaticaOPT.py',300),
  ('asignacion -> expresion IGUAL expresion','asignacion',3,'p_asignacion_exp1','gramaticaOPT.py',306),
  ('asignacion -> expresion IGUAL RSTACK CORIZQ RINT PARIZQ expresion PARDER CORDER','asignacion',9,'p_asignacion_exp2','gramaticaOPT.py',312),
  ('asignacion -> expresion IGUAL RHEAP CORIZQ RINT PARIZQ expresion PARDER CORDER','asignacion',9,'p_asignacion_exp2','gramaticaOPT.py',313),
  ('asignacion -> RSTACK CORIZQ RINT PARIZQ expresion PARDER CORDER IGUAL expresion','asignacion',9,'p_asignacion_exp3','gramaticaOPT.py',319),
  ('asignacion -> RHEAP CORIZQ RINT PARIZQ expresion PARDER CORDER IGUAL expresion','asignacion',9,'p_asignacion_exp3','gramaticaOPT.py',320),
  ('asignacion -> expresion IGUAL RMATH PUNTO RMOD PARIZQ expresion COMA expresion PARDER','asignacion',10,'p_asignacion_exp5','gramaticaOPT.py',326),
  ('expresion -> DECIMAL','expresion',1,'p_expresiones','gramaticaOPT.py',333),
  ('expresion -> ENTERO','expresion',1,'p_expresiones','gramaticaOPT.py',334),
  ('expresion -> RP','expresion',1,'p_expresiones','gramaticaOPT.py',335),
  ('expresion -> RH','expresion',1,'p_expresiones','gramaticaOPT.py',336),
  ('expresion -> ID','expresion',1,'p_expresiones','gramaticaOPT.py',337),
  ('expresion -> expresion MAYOR expresion','expresion',3,'p_expresiones2','gramaticaOPT.py',343),
  ('expresion -> expresion MAYORIGUAL expresion','expresion',3,'p_expresiones2','gramaticaOPT.py',344),
  ('expresion -> expresion MENOR expresion','expresion',3,'p_expresiones2','gramaticaOPT.py',345),
  ('expresion -> expresion MENORIGUAL expresion','expresion',3,'p_expresiones2','gramaticaOPT.py',346),
  ('expresion -> expresion IGUALDAD expresion','expresion',3,'p_expresiones2','gramaticaOPT.py',347),
  ('expresion -> expresion DIFERENTE expresion','expresion',3,'p_expresiones2','gramaticaOPT.py',348),
  ('expresion -> RINT PARIZQ expresion PARDER','expresion',4,'p_expresiones1','gramaticaOPT.py',354),
  ('expresion -> MENOS expresion','expresion',2,'p_expresion_unaria_aritmetica','gramaticaOPT.py',359),
]
